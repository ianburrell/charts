apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    app: "{{ .Chart.Name }}"
    component: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      release: "{{ .Release.Name }}"
      app: "{{ .Chart.Name }}"
      component: webserver
  template:
    metadata:
      labels:
        heritage: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        app: "{{ .Chart.Name }}"
        component: webserver
    spec:
      containers:
        - name: webserver
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args: [ "webserver" ]
          env:
            - name: LOAD_EX
              value: {{ if .Values.loadExamples }}"y"{{ else }}"n"{{ end }}
            - name: EXECUTOR
              value: "Celery"
            - name: FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: fernet-key
            - name: POSTGRESQL_HOST
              value: {{ template "postgresql.fullname" . }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.postgresUser | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql.fullname" . }}
                  key: postgres-password
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.postgresDatabase | quote }}
            - name: REDIS_HOST
              value: {{ template "redis.fullname" . }}
            {{ if .Values.redis.usePassword }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "redis.fullname" . }}
                  key: redis-password
            {{ end }}
          ports:
            - containerPort: 8080
          resources: {}
